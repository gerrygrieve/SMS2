#!/usr/bin/perl -wT

# save the entered info to a file & redisplay
# this script is intended to management info that is editable by 
# the course intructors:  course.cgi is a more general tool

$ENV{PATH} = "/bin:/usr/bin";

use lib "/www/Gform/lib/";
use lib "../lib/";
use SMS_Person;
use Debug;

use Date::Calc qw(Today Delta_Days Add_Delta_Days Week_of_Year);


use SMS_html_Util;

use Form_Util;
use strict;
use CGI;
use CGI::Carp 'fatalsToBrowser';

my $this_script = "/cgi-bin/SMS2/cgi/Confirm";
my $title = "P &amp; A Student Shop Course Confirm";
my $version = "0.0.1";
Debug::Set_Debug(1, "html");
my ($wel, $fname);
my $sp = '&nbsp;';
my $q = new CGI;

my $qsave =$q->submit( -name  => "Save",
#                       -class => $bs_style,      
                       -value => "Save"); 
my $Hidden;
    
print $q->header(-type=> "text/html", -expires=>'now'), "\n";
print $q->start_html( -title  => "PandA  ", 
                      -style  => [    {'src'=>'/Gform//SMS/SMS.css'},
								 ],
					),"\n";
print $q->start_multipart_form("POST", $this_script), "\n";

#print "try dumping the query edit field ",  $q->param('edit')," <br />";
#print "dump query...<br />";
dump_it();

if ($q->param('Save') ) 	{   do_Save(); } 
else						{   do_form();  }

print $q->endform;
print $q->end_html;
exit;

sub do_form {
#print the welcome    
  #  Debug::dsay(" do_form()");
	
	my $courseID = $q->param("courseID")   ? $q->param("courseID")  : "";
	my $cn = $q->param("cn") ? $q->param("cn")  : "";
#	Debug::dsay(" cn [$cn]  courseID [$courseID]  ");
	if ( ! $cn  or ! $courseID ) {
		error_page ();
		return;
	}

	my ($mod, $year, $doy, $ampm) = split "-", $courseID;
	my ($year,$month,$day) = Add_Delta_Days($year,1,1, $doy - 1);
	my $iso = sprintf "%4d-%2.2d-%2.2d",  ($year,$month,$day);
	my $sn = SMS_Person::cn2sn($cn);	
	Debug::dsay(" mod [$mod] [$doy] [$ampm] $iso $sn");

  
	my $qc = $q->radio_group (-name=>"confirm",
                              -values=>["Confirm", "Decline"]
                             );

	my $out = "";
	$out .= qq{ <div class="invite">};
	$out .= qq{ <div class="space">};
	$out .= qq{ <p class="invite">\n};
	$out .= qq{ You are being invited to the following SMS module: <br>\n};
	$out .= qq{ <table class="invite">};

	$out .= qq{<tr><td class="invite">Module : </td> <td class="indata"> $mod</td></tr>};
	$out .= qq{<tr><td class="invite">Date: </td><td class="indata"> $iso</td></tr>};
	$out .= qq{<tr><td class="invite">Time: </td><td class="indata"> $ampm</td></tr>};

	$out .= qq{</table>};

	$out .= qq{ <p> This slot is reserved for you until 48 hours before
				the scheduled start of the course.  After which, we may
				offer the slot to another student.</p>}	;
	$out .= qq {<p class="button">$qc</p>};
	$out .= qq {<p class="button">$qsave</p>};
	$out .= qq{ </div>};

	$out .= qq{</div>\n};
	$out .= $q->hidden("sn", $sn);
	$out .= $q->hidden("mod", $mod);
	print $out;



}
sub error_page{
	  print "<p> Invalid input to the Confirmation Page<br />";

}
sub do_Save {
    my $sn  = $q->param("sn");
	my $mod = $q->param("mod");
    my $dd  = $q->param("confirm") ? $q->param("confirm") : "";



    my $today = sprintf "%4d-%2.2d-%2.2d", Today();
    if ($dd eq "Confirm") {
       SMS_Person::update_app_record($sn, $mod, $dd, $today);
       print "<p> Thanks your Confirmation has been noted <br />";
    } elsif ($dd eq "Decline") {
       SMS_Person::update_app_record($sn, $mod, $dd, $today);
     #  SMS_Person::update_app_record($sn, "booked_for_course",$today ,"Delete");
       print "<p> Thanks, your booking has been dropped <br />";
    }
}

sub dump_it {
	print "<h2> Dump of the query </h2><br />\n";
        print $q->Dump;
        print "<hr />";
}

