#!/usr/bin/perl 

# Admin script for student shops

$ENV{PATH} = "/bin:/usr/bin";

use lib "/www/Gform/lib/";
use Debug;
use lib "../lib";

use course_metadata;
use SMS_Person;
use SMS_html_Util;

use HTML_Util;
use Form_Util;

use strict;
use CGI;
use Date::Calc qw(Today Delta_Days Add_Delta_Days Week_of_Year);
use CGI::Carp 'fatalsToBrowser';
my $today     = sprintf ("%04d-%02d-%02d", Today() );
my $n_Weeks_to_Display = 10;
my $webhost = SMS_Person::webhost();

my $this_script = "/cgi-bin/SMS2/cgi/Admin";
my $styleURL = '/css/SMS.css';
my $title = "P &amp; A Student Shop Sign Up Admin Tool";
my $version = "0.1.0";
Debug::Set_Debug(1, "html");
my ($wel, $fname);
my $sp = '&nbsp;';
my $q = new CGI;


my $qsave = $q->submit( -name  => "Save",
#                      -class => $bs_style,      
                       -value => "Save"); 
my $Hidden;
#{'src' => $styleURL},
print $q->header(-type=> "text/html", -expires=>'now'), "\n";
print $q->start_html( -title  => "PandA SShop Admin ", 
                      -style  => [
									{'src' => $styleURL},
								   {'src'=>'/Gform//SMS/css/SMS.css'},
                                 
								 ],
                     ),"\n";
print $q->start_multipart_form("POST", $this_script), "\n";

Form_Welcome();

#print "try dumping the query edit field ",  $q->param('edit')," <br />";
#print "dump query...<br />";
dump_it();

   if ( $q->param('next') eq "Schedule Course")     { do_Schedule_Course(); }
elsif ( $q->param('next') eq "Select_Invitees")     { do_select_Invitees();}
elsif ( $q->param('next') eq "do_Invitees")         { do_Invitees();}
elsif ( $q->param("AddNewApp")  )                   { do_App();        }
elsif ( $q->param("ShowAvail")  )			        { do_showAvail();  }
elsif ( $q->param("AppSort")    )                   { do_showApps();   } 
elsif ( $q->param("Save Dates")  )            { do_Save_Dates(); }
elsif ( $q->param("Delete App")  )            { do_DeleteApp();  }
elsif ( $q->param("View App")  )              { edit_App($q);        } 
elsif ( $q->param('next') eq "Manage Courses")  { do_manage_Courses();}
elsif ( $q->param('next') eq "Mail It" )      { do_mail_invites();}
elsif ( $q->param('next') eq "Save w/o Mail") { do_Save_Course();}
elsif ( $q->param('next') eq "Manage Dates")  { do_Exclusions(); }
elsif ( $q->param("Edit_sn") )  			  { do_Edit_Student(); }
elsif ( $q->param('week') ) 	              { do_WeekPage($q->param('week'));}
elsif ( $q->param('Print Course') )           { do_PrintCourse(); }
elsif ( $q->param('MoreWeeks') )              { do_MoreWeeks(); }
elsif ( $q->param('save_Courses') ) 	      { do_Save_Courses(); }
elsif ( $q->param('completed') ) 	          { do_Update_Course(); }
elsif ( $q->param('next') eq 'Show Apps' )    { do_showApps(); } 
else                                          { do_mainpage(); }
print $q->endform;
print $q->end_html;
exit;

sub is_Auth {
# this should in in newslib.pm 
    my $user = shift;
    my $out = $user eq "grieve";    
    return $out;
}

sub do_mainpage{
   Debug::dsay ("This is  Mainpage;");
    my $out = do_selectTable();
    print $out;
}

sub do_showAvail {
	Debug::dsay ("This is  do_showAvail;");

	my @apps =  SMS_Person::get_Data();

	my $out = qq{<table class="timeslots"> };

	foreach my $day ( qw[ Mon Tue Wed Thr Fri] ) {	
		foreach my $time ( "AM", "PM" )	{
		
			my $tag  = "avail_" . $day . "_" . $time;
			my $tslot =  $day . "_" . $time;
			$out .= qq{ <tr>};
			$out .= qq{<td class="timeslots">$tslot</td>};
			my $alist = "";
			my $hlist = "";
			foreach my $a ( @apps) {
				my %app = %{$a};
				if ( defined($app{$tag} )) {
					my $sn = $app{UBC_id};
					my $name = $app{full_name} ."_$sn";
					my $bname = "Edit_sn";
					my $but = $q->submit(-name=>"$bname", -value=>$name);
				
					$alist .= "$but &nbsp";
				#	$alist .= $q->hidden( -name=>'Edit_SN',
				#						  -default=>[$sn]);
				}			
			}
			$out .= qq{<td class="timeslots">$alist</td>} ;
			$out .= qq{</tr>};
		}
	}
	$out .= qq{</table>};
	print $out;
}

sub do_Invitees {
    use Date::Calc qw (Today);
    Debug::dsay ("This is do_Invitees ");
    
    my $today = sprintf "%4d-%2.2d-%2.2d", Today();
    
    my $mod = "Mod".$q->param("module");
    my $cn_tag = $mod. "_course_name";
    my $in_tag = $mod. "_invited";
    my $cname =  $q->param("course");
    my ($modnum,$yr,$doy,$time) = split "-", $cname;
  
    $modnum =~ s/^m//i;
    Debug::dsay(" modnum is [$modnum]");
    my ($year,$month,$day) = Add_Delta_Days($yr,1,1, $doy - 1);
    my $iso_cdate = sprintf "%4d-%2.2d-%2.2d", ($year,$month,$day);
    my $invite_message = SMS_Person::getInviteTempplate();
    
    print qq{<p> The template of the invite message to be sent out is...<br />
              <pre>$invite_message</pre> </p>  
    };

    my %courses = course_metadata::get_Courses_by_ModNum();
    my $course_title = $courses{$modnum}{title};
    my $out = "";
    
    #Debug::dsay ( "$cn_tag -- $cname" );
    #Debug::dsay ( "$in_tag -- $today" );
    my @invitees = $q->param('invited');
	my $mess = "";	
    foreach my $sn (@invitees) {
		
        my $mess ="";
        $out .= qq{<p class="info">};
        $out .= qq{student number -- $sn<br /> };
        my $edata = SMS_Person::get_Data_by_ID($sn);
        $edata->{$cn_tag} = $cname;
        $edata->{$in_tag} = $today;
        SMS_Person::save ($edata);
        my $email = $edata->{email};
        my $cn    = $edata->{confirmationnumber} ?
					$edata->{confirmationnumber} :
					SMS_Person::sn2cn($sn);;
        my $fname = $edata->{full_name};
        Debug::dsay (" cn is [$cn]");
        $out .= qq{$cn_tag  -- $cname<br /> };
        $out .= qq{$in_tag  -- $today<br /> };
        $out .= qq{</p>};
        
        $mess = $invite_message;
        $mess =~ s/%% name %%/$fname/;
        $mess =~ s/%%\s+title\s+%%/"$course_title"/;
        $mess =~ s/%%\s+ampm\s+%%/$time/;
        $mess =~ s/%%\s+date\s+%%/$iso_cdate/;
        $mess =~ s/%%\s+modnum\s+%%/$modnum/;
        $mess =~ s/%%\s+cn\s+%%/$cn/g;

    
		my $url = qq{<a href="http://$webhost/cgi-bin/SMS2/cgi/Confirm?confirmationnumber=%% cn %%">
-         		http://$webhost/cgi-bin/SMS2/cgi/Confirm?confirmationnumber=%% cn %%</a>};
		$url =~  s/%%\s+cn\s+%%/$cn/g;
		$mess .= $url;
#		$out .= $mess;

		my $from = "sms-management";
		my $subj = "SMS Module Invite";
		SMS_Person::mail_it($email, $from, $subj, $mess);
		print $out;
		print $q->hidden("cn", $cn);
		print $q->hidden("courseID",$cname  );
	}
    print $out;

  
   
    print do_selectTable();
    
}

sub do_showAvail_in_TS {
    my $this_ts = shift; 
	Debug::dsay ("This is  do_showAvail_in_TS; ts is [$this_ts]");

	my @apps =  SMS_Person::get_Data();

	my $out = qq{<table class="timeslots"> };

	foreach my $day ( qw[ Mon Tue Wed Thr Fri] ) {	
		foreach my $time ( "AM", "PM" )	{
			my $tag  = "avail_" . $day . "_" . $time;
			my $tslot =  $day . "_" . $time;
            next unless ($tslot eq $this_ts);
			$out .= qq{ <tr>};
			$out .= qq{<td class="timeslots">$tslot</td>};
			my $alist = "";
			my $hlist = "";
			foreach my $a ( @apps) {
				my %app = %{$a};
				if ( defined($app{$tag} )) {
					my $sn    = $app{UBC_id};
					my $name  = $app{full_name} ."_$sn";
					my $bname = "Edit_sn";
					my $but   = $q->submit(-name=>"$bname", -value=>$name);
                    my $ibox  = $q->checkbox(-name=>'invited',
                                             -checked=>0,
                                             -value=>$sn,
                                             -label=>'Invite');
                    
					$alist   .= "$but &nbsp $ibox <br />";
				}			
			}
            $alist = $alist =~ /_\d/ ? $alist  : "no apps available"; 
			$out .= qq{<td class="timeslots">$alist</td>} ;
			$out .= qq{</tr>};
		}
	}
	$out .= qq{</table>};
	print $out;
}
sub do_DeleteApp {
    my $id = $q->param("App_ID");
    Debug::dsay ("delele_App:; a is {$id}");
    SMS_Person::delete_file($id);
    do_mainpage();
}

sub do_Edit_Student {

	my $student = $q->param("Edit_sn");
	my ($name, $sn) = split "_", $student; 
	Debug::dsay ("This is Admin do_Edit_Student sn = [$sn];");
	print "<h2> q is [$q]</h2>";
	edit_App($sn, $q);
}

sub do_App {

	Debug::dsay ("This is Admin do_app ;");
	print do_selectTable();
	print  qq{<div class="student_reg"};
    print  qq{<p> You can register a student with this form </p>};


	my $html = SMS_html_Util::student_register($q, "admin");

	print $html;
    print  qq{<p>$qsave</p>};
    print  qq{</div>};
}

sub edit_App {
    Debug::dsay ("This is Admin Edit_App ;");
    my $sn = $q->param("View App") ?
			 $q->param("View App") :
			 shift;
    my $q = shift;
    Debug::dsay ("edit_App:; sn is {$sn}");

    my $app = SMS_Person::get_Data_for_ID($sn);

    $q = SMS_html_Util::sms2form($app, $q);
    
    print  do_selectTable();

	print  qq{<div class="student_reg"};
    print  qq{<p> You can register a student with this form </p>};

	my $html = SMS_html_Util::student_register($q, "admin");

	print $html;
    print  qq{<p>$qsave</p>};
    print  qq{</div>};
}
#   
#    my $out = signupform::App_Data($a);
#    $out   .= $q->hidden("App_ID",$id) . "\n";
#    print $out;
#    
#    my $qsave =$q->submit( -name  => "Save",
##                         -class => $bs_style,      
#                         -value => "Save"); 
#    my $qdele =$q->submit( -name  => "Delete App",
##                         -class => $bs_style,      
#                          -value => "Delete "); 
#    my $qadd =$q->submit( -name  => "AddNewApp",
##                         -class => $bs_style,      
#                          -value => "Add New "); 
#
#    print qq{<table><tr><td>$qsave<td>
#                        <td>$qadd<td>
#                        <td>$qdele<td></tr>\n};
#    print qq{</table>}; 
#}

sub do_App_by_Name {
    my $app = $q->param("View App");
    my $id = $1 if $app =~ /ID=(\d+)/;
    Debug::dsay ("do_App:; a is {$id}");
    my %appobjs  = SMS_Person::get_Data_by_ID();
    my $a = $appobjs{$id};
    my $n = $a->{full_name};
    Debug::dsay ("do_App:; a is {$n}");
    my $out = signupform::App_Data($a);
    $out   .= $q->hidden("App_ID",$id) . "\n";
    print $out;
    my $qsave =$q->submit( -name  => "Save",
#                         -class => $bs_style,      
                         -value => "Save"); 
    my $qdele =$q->submit( -name  => "Delete App",
#                         -class => $bs_style,      
                          -value => "Delete "); 
    my $qadd =$q->submit( -name  => "AddNewApp",
#                         -class => $bs_style,      
                          -value => "Add New "); 

    print qq{<table><tr><td>$qsave<td>
                        <td>$qadd<td>
                        <td>$qdele<td></tr>\n};
    print qq{</table>}; 
}



sub add_inst_input {
    my $val = "xx";
    my $out = qq{<table style="margin-top: 53px;"><tr>\n};
    $out .=   qq{ <td>Instructor</td> };
    my $in = $q->textfield( -name =>"instructor",
                            -value => $val,
                            -size => 50 );
    $out .=   qq{ <td>$in</td>\n };
    $out .=   qq{ </tr></table> };
}

sub do_select_Invitees{
    use Date::Calc qw[  Day_of_Year ];
    Debug::dsay("this is do_select_Invitees ");
     
    my $mod  = $q->param('module');
    my $ts   = $q->param('timeslot');
    my $date = $q->param('date');
    my ($day,$time) = split "_", $ts;
    my @course_date = split "-", $date;
    my $doy = Day_of_Year(@course_date);
    my $year = $course_date[0];
    
    my $Course_designation = sprintf "M%d-%4d-%3.3d-%s",$mod,$year, $doy,$time;
    
    print "course Name : $Course_designation is to be held on $date, $ts\n";
    print qq{ <p> The following table shows the applicants which have indicated
                  their availability for the given Time slot.<br />
                  Select the applicants which are to be invited to this course </p>};
    do_showAvail_in_TS($ts);
    print $q->hidden('module',$mod);
    print $q->hidden('timeslot',$ts);
    print $q->hidden('course',$Course_designation);
    my $xx = $q->submit(-name=>'next',-value=>"do_Invitees");
    
    print qq{<p>$xx</p>};
    return;
}

sub do_Schedule_Course {
 
    Debug::dsay("this is do_Schedule_Course ");
    
    print "<h3> Select a module></h3>";
    
    my $data = course_metadata::get_Course_Data_json();
	my @courses = @{$data->{course_data}};

    my $out = "";
    $out .= qq{<table class="ctable">};
	foreach my $c ( sort {$a->{num} <=> $b->{num} } @courses ) {
        $out .= qq{<tr>};
		my $modnum = $c->{num};
        my $value = $c->{title};
        
        my $but =qq{<label><input   type="radio"
                                    name="module"
                                    value=$modnum
                                    checked="" />chose me!</label>};
	
		$out .= qq{<td >$modnum  </td><td> $value</td>
                   <td> $but</td> </tr>\n};
    }
    $out .= qq{</table>\n};

	print $out;
    
    print SMS_html_Util::mk_ts_table($q);
    
    print " Select a date (yyyy-mm-dd) >", $q->textfield('date','',12,80);
    my $xx = $q->submit(-name=>'next',-value=>"Select_Invitees");
    
    print qq{<p>$xx</p>};
    return;
}

sub do_mail_invites {
 
    Debug::dsay("Admin::do_mail_invites...");
 
    my @emails = @_;
    my $sub = "Student Shop Training";
    my $x = 'grieve@phas.ubc.ca';
    my $from = "";
    my $out = qq{<h1>SMS Admin confirmation of Course Schedule</h1>
                  <p> Invitations have been mailed to ...</p><ul>};
    my %names = ();
    my @ids = ();
    foreach my $p ( $q->param ) {
       my $mess =  $q->param("mailmess");
       next unless ($p =~ /^name(\d+)/);
       my $id = $1;
       push @ids, $id;
       my $name = $q->param($p);
       my $email = $q->param("email".$id);
       my $cn = SMS_Person::confirmationnumber($id);
       $mess =~ s/\[\[ name \]\]/$name/;
       $mess =~ s/Confirm/Confirm?=$cn/;
       
       $names{$id}= $name;   
       SMS_Person::mail_it($email, $from, $sub, $mess);
       $out .= qq{<li>$name -- $email </li>}
    }
    $out .= qq{</li>};
    
    do_Save_Course(@ids);


    print $out;
}

sub do_Save_Courses {

    Debug::dsay("Admin::Save_Course...");

	#my $data = course_metadata::get_Course_Data_json();
	#my @courses = @{$data->{course_data}};
	#
	my $out = "";
	my @courses = ();
	my @mods = $q->param('num');
	foreach my $n ( @mods  ) {
        my %cdata = ();
		$cdata{num} = $n;
		my $x = 'title'.$n;
        my $y = $q->param($x);
		$cdata{title} = $y;
		
		$x = 'desc'.$n;
		$y = $q->param($x);
		$cdata{desc} = $y;

		$x = 'date_upcoming'.$n;
		my @dates = $q->param($x);
		my @xdates = (); 
		foreach my $up ( @dates ) {
			next unless $up;
			push @xdates, $up;
		}
		$cdata{date_upcoming} = \@xdates;

		push @courses, \%cdata;
    }
	my %cdata = ();
	$cdata{course_data} = \@courses;
	course_metadata::put_Course_Data_json( \%cdata );

	my $out = "<h3> The course updates may have been saved</h3>";
	$out .= do_selectTable();
	print $out;
#	hide ( "next", "manage Courses");
}

sub do_PrintCourse {
    my $iso_wk  = shift;
    $iso_wk = $iso_wk ? $iso_wk : $q->param("Print Course");
    my ($year ,$wnum) = split "-", $iso_wk;
    Debug::dsay("Admin::do_PrintCourse..input is  {$iso_wk}  week {$wnum} year {$year}");

    $wnum =~ s/^w//;
    my %cdata = SMS_Person::get_One_Course($wnum, $year);
    Debug::dsay("Admin::do_PrintCourse.. got Cdata");
    my %edata = SMS_Person::get_Data_by_ID();

#    my $wnum = $cdata{wnum};
    my $inst = $cdata{instructor};
    my $out = "";
    $out .= qq{<table class-"ctable"> };
    $out .= qq{ <tr><td colspan="4" class="ttitle"> Data for Course in Week $wnum</td></tr>};
    $out .= qq{<tr><td >Instructor: </td><td colspan="3">$inst</td></tr>};
    $out .= qq{<tr><th>Name/ID</th><th>Course Booked</th><th>Completed ?</th><th>Drop</th></tr>};

    foreach my $ahash  (  @{$cdata{apps}} ) {
	$out .= "<tr>";
	my $id = ${$ahash}{id};
	my $v = ${$ahash}{name} . " ID=" .$id;
	my $bd = $edata{$id}->{booked_date}  ? $edata{$id}->{booked_date} : "--";
        my $bf = $edata{$id}->{booked_for_course}  
               ? $edata{$id}->{booked_for_course} 
               : "--";
	my $ckbox = "compl-".$id;
	my $cd = $edata{$id}->{completed_ok}
	       ? $edata{$id}->{completed_ok}
	       : $q->checkbox( -name=>$ckbox, -label=>" ");
	my $mvbox = "drop-".$id;
	my $mv = $q->checkbox( -name=>$mvbox, -label=>" ");
	my $xx = $q->submit(-name=>'View App',-value=>$v);
   
	$out .= qq{<td> $xx </td><td>$bf</td><td>$cd</td><td>$mv</td>};
	$out .= "</tr>";
    }
    $out .= qq{</table>};
    my $xx = $q->submit(-name=>'completed',-value=>"Submit");
    my $yy = $q->submit(-name=>'completed',-value=>"Submit");
    $out .= qq{<p>$xx</p>};
    $out .= $q->hidden(-name=>"thisweek",   -value=>$iso_wk);
    print $out;
}

sub do_CourseTable {    
    my $chashref = shift;
    my %coursedata = %$chashref;
    
    my %edata = SMS_Person::get_Data_by_ID();

    my $wnum = $coursedata{wnum};
    my $inst = $coursedata{instructor};
    my $out = "";
    $out .= qq{<table class-"ctable"> };
    $out .= qq{ <tr><td colspan="3" class="ttitle"> Data for Course in Week $wnum</td></tr>};
    $out .= qq{<tr><td >Instructor: </td><td colspan="2">$inst</td></tr>};
    $out .= qq{<tr><th>Name/ID</th><th>Booked Course </th><th>Completed ?</th></tr>};
    foreach my $ahash  (  @{$coursedata{apps}} )
    {
	$out .= "<tr>";
	my $id = ${$ahash}{id};
	my $v = ${$ahash}{name} . " ID=" .$id;
	my $bd = $edata{$id}->{booked_date}  ? $edata{$id}->{booked_date} : "--";
        my $bf = $edata{$id}->{booked_for_course}  
               ? $edata{$id}->{booked_for_course} 
               : "--";
#	my $cd = $edata{$id}->{completed_date}  ? $edata{$id}->{completed_date} : "--";
	my $ckbox = "compl-".$id;
	my $cd = $edata{$id}->{completed_ok}
	       ? $edata{$id}->{completed_ok}
	       : $q->checkbox( -name=>$ckbox, -label=>" ");
	Debug::dsay("do_PrintCourse:: ckbos is {$ckbox} ");
	 
	my $xx = $q->submit(-name=>'View App',-value=>$v);
   
	$out .= qq{<td> $xx </td><td>$bf</td><td>$cd</td>};
	$out .= "</tr>";
    }
    $out .= qq{</table>};
    
    return $out; 
}

sub do_manage_Courses {
	my $out = "";
	$out .= qq {<h3> This page allows the course meta-data to be edited</h3>};

	my $hashsign = q{&#35;};
    my $but = $q->submit(	-name=>'save_Courses',
							-value=>'Save Courses' ); 

	my @courses = course_metadata::get_Course_Data_Array();
	$out .= qq{<div id="coursetable">};

	foreach my $c ( sort {$a->{num} <=> $b->{num} } @courses ) {
		$out .= qq{<div class="module">};
		$out .= qq{<table class="ctable"><tr>};
		my $value = $c->{num};
		my $modnum = $c->{num};
		my $qs = $q->textfield(-name=>"num",
                               -value => $value,  -size=>10, );
		$out .= qq{<td class="prompt">Module $hashsign </td><td> $qs</td></tr>};

		$value = $c->{title};
		$qs = $q->textfield(-name=>"title".$modnum,
                            -value => $value,   -size=>60, );
		$out .= qq{<td class="prompt">Title  </td><td> $qs</td></tr>};
		$value = $c->{desc};
		$qs = $q->textarea(-name=>"desc".$modnum,
                            -value => $value,
							-rows=>2,
							-columns=>60);
		$out .= qq{<td class="prompt">desc</td><td> $qs</td></tr>};
		
		my @dates = @{$c->{date_upcoming}} if @{$c->{date_upcoming}};
		foreach my $up ( @dates ) {
			$value = $up;
			$qs = $q->textfield(-name=>"date_upcoming".$modnum,
                                -value => $value,  -size=>60, );
			$out .= qq{<td class="prompt">Upcoming Date </td><td> $qs</td></tr>}  ;
		}
#add a emply date
		$qs = $q->textfield(-name=>"date_upcoming.$modnum",
                                  -size=>60, );
		$out .= qq{<td class="prompt">Upcoming Date </td><td> $qs</td></tr>}  ;

		$out .= qq{</table>};
		$out .= qq{</div>}; 
	
	}
	$out .= qq{<div class="submit"> $but</div>};
	$out .= qq{</div>};
	print $out;
}

sub do_show_Courses {
   Debug::dsay("do_show_Courses..");
 
   my $out = "";
   $out .= qq {<h3> This shows the starting dates of courses
		    that have been scheduled </h3>};
   $out .= qq { <table> };
   my $i = 0;
   my $ncols= 4;
   foreach my $c (  SMS_Person::get_CourseList) {
        $out .= qq { <tr> } if $i%$ncols == 0 ;
        my $w = $c;
        $w =~ s/\.xml//; 
        my $b3 =$q->submit(-name=>'Print Course',
                           -value=>$w); 
        $out .= qq{<td> $b3</td>};
        $i++;
        $out .= qq { </tr> } if $i%$ncols == 0 ;
   }
   $out .= qq { <table> };
   print $out;
}

sub do_Update_Course {
    my $out = qq{<p>The records for };
    my $iso_wk = $q->param("thisweek");
    Debug::dsay("do_Update_Course:: isowk is {$iso_wk}");
    foreach my $p ($q->param )
    {
		if ($p =~ /compl-(.*)/) {
			my $id = $1;
			Debug::dsay(" {$id} has completed");
			$out .= qq{ $id ,"};
			SMS_Person::update_app_record($id, { completed_ok => "yes",} );
		} elsif ($p =~ /drop-(.*)/) {
			my $id = $1;
			Debug::dsay(" {$id} is being dropped ");
			$out .= qq{ $id ,"};
			SMS_Person::update_app_record($id,	{  booked_date => "yes",
							   booked_for_course => "yes",
							},
						  "Delete");
			SMS_Person::update_course_record($iso_wk, $id, "Delete");
		}
    }
    $out .= qq{have been updated </p>};
    $out .= do_selectTable();
    print $out;
}

sub do_MoreWeeks {
    Debug::dsay("Admin::do_MoreWeeks..");
    
    my $sw = $q->param("startweek");
    my $sy = $q->param("startyear");
    my $sign = $q->param("MoreWeeks");
     Debug::dsay("Admin::do_MoreWeeks.. the next week {$sw} $sy");  
    my $tdate = SMS_Person::get_Tues_Date($sw,$sy);
    my @tdate = split "-", $tdate;
    my $inc = $sign eq "+" ? 7 : -7;
    my @new = Add_Delta_Days(@tdate, $inc*$n_Weeks_to_Display);
    print do_WeekTable(@new);   
}

sub do_getAppsTable {
    my $apps_per_row = 5;
    my $out = qq{\n <h2> Weeks where applicants indicated  preference</h2>\n};
    $out   .= qq{<p> (i,j,k) are number of apps with 1st choise,2nd & 3rd</p>};
    $out   .= qq{\n<table class="apptable">};
    my $i=0;
    foreach my $o ( SMS_Person::get_Weeks() ) {

        my $x = $q->submit(-name=>'week',-value=>$o);
		$i++;
        $out .= qq{<tr>} ;#if ($i%%$apps_per_row == 1);
        $out .= qq{<td> $x</td>};
        $out .= qq{</tr>};# if ($i%%$apps_per_row == 0);
   }
   $out .= qq{</table>};
}

sub do_showApps {
    my $show_current = 0;
    my $out = do_selectTable();
    print $out;
    Debug::dsay ("this is do_showApps line 563 ;");
 
    my @apps = $show_current ? SMS_Person::get_Current_Data()
                             : SMS_Person::get_Data();
	my $napps = scalar @apps;

	Debug::dsay ("Admin::do_showApps number of apps is [$napps] ");
    my $id_but    = "ID";
    my $name_but  = "Name";
    my $rdate_but = "Request Date";
    my $ubc_but   = "UBC #";

   #my $id_but    = $q->submit(-name=>'AppSort', -value=> "ID");
   # my $name_but  = $q->submit(-name=>'AppSort', -value=> "Name");
   # my $rdate_but = $q->submit(-name=>'AppSort', -value=> "Request Date");
   # my $ubc_but   = $q->submit(-name=>'AppSort', -value=> "UBC #");

    $out  = qq{<table class="apptable">};
    $out .= qq{<tr><th>$id_but</th>
                   <th>$name_but</th>
                   <th>$ubc_but</th>
                   <th>$rdate_but</th>
                   <th>Booked Date</th>
                   <th>Completed OK</th></tr>};
    my %sort_routines = ( Name           => \&sort_by_Name,
                          ID             => \&sort_by_ID,
                          "SignUp Date" => \&sort_by_ReqDate,
                          "UBC #"        => \&sort_by_UBC,
	                );
    #my $sort = $q->param("AppSort") ? $q->param("AppSort") : "ID";
    #@apps = & { $sort_routines{$sort} }(@apps); 
 
    foreach my $o ( @apps )   {
        my $x  = $o->{full_name};

        my $id = $o->{UBC_id};
        my $v  = $x . "  ID=$id";
        my $xx = $q->submit(-name=>'View App',-value=>$id);
		my $ubc = $o->{UBC_id};
 
		my $rf = defined ($o->{date_signup})  
               ? $o->{date_signup}
               : "???";
		my $bf = $o->{booked_for_course}  
               ? $q->submit(-name=>'Print Course',
                            -value=>$o->{booked_for_course})
               : "not booked";
		my $cd = $o->{completed_ok}  ? $o->{completed_ok} : "--";

	
        $out .= qq{<tr class="apps">};
        $out .= qq{<td> $xx</td>
                   <td> $x</td>
                   <td>$ubc</td>
				   <td>$rf</td>
                   <td>$bf</td>
                   <td>$cd</td>};
        $out .= qq{</tr>};
   }
   $out .= qq{</table>};
   print $out;
   
}
sub sort_by_UBC {
    
    my @array = @_;
    my @sorted = ();
    my %temp = ();
  
    my $i = 0;
    foreach my $a (@array)     {
        $i++;
        my $ubc  = $a->{UBC_id}
                 ? $a->{UBC_id}
	         : "x";
        $ubc  = $i unless $ubc =~ /\d+/;
		$temp{$ubc} = $a;
    }
    foreach $i (sort {$a <=>  $b} keys %temp) {
		push @sorted, $temp{$i};
    }
    return @sorted;
}

sub sort_by_ReqDate {
    
    my @array = @_;
    my @sorted = ();
    my %temp = ();
    my %tempa = ();

    my $i = 0;
 
    foreach my $a (@array) {
        my $rd  = $a->{request_date}
                ? $a->{request_date}
	        : $i;
        $rd =~ s/-//g;
        $a->{sortval} = $rd;
        $tempa{$i} = $a;
        $i++;
     }

    foreach  my $xx ( sort{$tempa{$a}->{sortval} <=>
			               $tempa{$b}->{sortval} } keys %tempa )
    {
        delete $tempa{$xx}->{sortval};            
	push @sorted, $tempa{$xx};
    }
    return @sorted;
   
}

sub sort_by_Name {
    
    my @array = @_;
    my @sorted = ();
    my %temp = ();
    foreach my $a (@array)  {
        my $name = $a->{full_name};
        my $lname = (split " ", $name)[-1]; 
		$temp{$lname}=$a;
    }
    foreach my $i (sort {$a cmp $b} keys %temp) {
		push @sorted, $temp{$i};
    }
    return @sorted;
}

sub sort_by_ID {
    
    my @array = @_;
    my @sorted = ();
    my %temp = ();
    foreach my $a (@array) {
        my $id = $a->{ID};
		$temp{$id}=$a;
    }

    foreach my $i (sort {$a <=> $b} keys %temp) {
		push @sorted, $temp{$i};
    }
    return  reverse @sorted;
}

sub  do_selectTable {
#    Debug::dsay ("this is do_selectTable ;");
    my $out = qq{<table id="selectTable">};
    my $b2 = $q->submit(-name=>'next',-value=>'show weeks');
    my $b1 = $q->submit(-name=>'next',-value=>'Show Apps');
    my $b3 = $q->submit(-name=>'next',-value=>'Manage Dates');
    my $b4 = $q->submit(-name=>'next',-value=>'Manage Courses');
    my $b5 = $q->submit(-name=> "AddNewApp", -value => "Add New Student");
 #   my $b6 = $q->submit(-name=>'next',-value=>'Edit Student');
	my $b7 = $q->submit(-name=>'ShowAvail',-value=>'Show Availability');
    my $b8 = $q->submit(-name=>'next',-value=>'Schedule Course');
	$out .= qq{<tr>};
    $out .= qq{<td> $b1 </td> };
    $out .= qq{    <td> $b4 </td> };
#    $out .= qq{    <td> $b3 </td> };
 #   $out .= qq{    <td> $b2 </td> <td> $b3 </td>
	$out .= qq{<td>$b5</td>};
#	$out .= qq{<td>$b6</td>};
	$out .= qq{<td>$b7</td>};
    $out .= qq{<td>$b8</td>};
    $out .= qq{</tr></table>};
    $out .= qq{<hr />};
    return $out;
}

sub do_form {
#print the welcome    
#     Debug::dsay(" do_form()");  
    my $tdtopright = '<td valign="top" align="right">';
    my $tdtop      = '<td valign="top">';
    my $sp = '&nbsp;';
    my $cellpad = ' cellpadding="4" ';   
        $wel = <<endxxx;
The first block of information is welcome junk<br>
endxxx

    my $t;
    my $ynow = "2009" ;
    my $monnow = "02";
 
    my %element_info = my %el_info =  SMS_Person::get_element_info();


    print "<h2> Main Page</h2>";
    print '<table border="0" cellpadding="4" cellspacing="10">', "\n";   
    foreach my $t ( sort {$element_info{$a}{rank} <=>
                          $element_info{$b}{rank} } keys %element_info )
   {
 #    Debug::dsay("do_form:: t is {$t}");
      print "<p> tag {$t} is typed {$element_info{$t}{qtype}}</p>" 
          if ($element_info{$t}{qtype} eq "AoH");
      my $value = $q->param($t) ? $q->param($t) : "" ;
      my $pout = $element_info{$t}{prompt} ? $element_info{$t}{prompt}: "";
      my $qout = $element_info{$t}{qtype}  ? $element_info{$t}{qtype} : "";
      next unless $pout;
      print "<tr>$tdtopright  $pout: </td>\n"; 
    
      $value = $today      if ($t eq "date" and !$value);                
      my $out = Form_Util::input_query(\%{$element_info{$t}}, $t, $value);
      print " "x4, $tdtop, "$out</td></tr>\n";
   }
    print "</table></center>\n";
    print "<p>$qsave</p>";
}

sub footer {
    print "<table><center>";
    print " <tr><td>",  $q->submit(-name=>'edit',-value=>'save'),            
          "</td><td>",  $q->submit(-name=>'edit',-value=>'back'), 
          "</td></tr>\n";
    print "</table></center></form>\n";
    
    return  
}

sub do_Save {
    my %element_info = SMS_Person::get_element_info();
    my %bd = ();
	my $part = "";
    my $id = $q->param("App_ID");
	Debug::dsay ("do_Save -- make App_ID was  {$id};");

	if (! $id) {
		Debug::dsay ("do_Save -- make new ;");
		$part  = SMS_Person::new();
		my $idx = $part->{ID};

		$bd{"ID"} = $idx;
		Debug::dsay ("do_Save -- make new {$idx}; $bd{\"ID\"}");
	} 

    Debug::dsay ("do_Save -- copying cgi params in hash for {$id};");
    foreach my $t ( sort {$element_info{$a}{rank} <=>
                          $element_info{$b}{rank} } keys %element_info )
    {
	   	next if ($t eq "ID" and ! $id) ;
		 if ( $t eq "ID") 	{ $bd{ID} = $id; }
		 else 				{ $bd{$t} = $q->param($t) ?  $q->param($t) : ""; }
    }
	Debug::dsay ( "call SMS_Person::save w $bd{ID}" );
    my $err = SMS_Person::save( \%bd, $id);
    Debug::dsay ("do_Save -- returning;");
    my $out = qq{<p> This information has been saved.. </p>};
    $out .= do_selectTable();
    print $out;
}

sub welcome {
     my $page_header = shift;

     my $pg_head =  $page_header ? $page_header : "";
     my $wel_text = $wel ? $wel : " ";

     print <<EndofWelcome2;
     <h2>$pg_head</h2>
     <p> $wel_text
     </p>
EndofWelcome2
   
    return;
}
sub Form_Welcome {
    print welcome_text();
   
    return;
}
sub Hide_params {
#    print "Hide_params call get_edit_flags <br />";

    my ($e, $value);
    my $Hidden = "";
    return $Hidden;
}
sub welcome_text {
   my $out = "<h1>$title $version </h1>";
   #open (F, "/www/Gform/sshop/lib/welcome.txt") || 
   #    die "cannot open welcome file";
   # $out .= <F>;
}

sub dump_it {
	print "<h2> Dump of the query </h2><br />\n";
    print $q->Dump;
    print "<hr />";
}

sub do_Manage_Data {
   print "<h2> do_Manage_Data </h2>\n";

   print "<table>\n";
    
   foreach my $note (sort {$b->date_post cmp $a->date_post } PhAs_Notice::get_Notices() )
   {

       print  "<tr> <td>", $note->date_post, "</td>\n";
       print  "     <td>", $q->submit(-name=>'edit',-value=>$note->xmlfile), "</td>\n";
       print  "     <td>", $note->label, "</td>\n";
       print  "</tr>\n";
   }
   print "</table>\n";
    
    return;
 
}
sub do_apps_page {
   print "<h2> do_apps_page </h2>";
   my $f = $q->param("edit");
   my $note = PhAs_Notice::get_One_Notice($f);

   print "<table><tr>";
   print  "     <td>", $q->submit(-name=>'edit',-value=>'edit'), "</td>\n";
   print  "     <td>", $q->submit(-name=>'edit',-value=>'mail'), "</td>\n";
   print "</tr></table>\n";

   hide ("Note_File",$f);

   return;
}
sub do_show_mail {
    use Text::Wrap qw[$columns];
    my $mess = "";
    my $nfile = $q->param("Note_File");
    print "<h2> show mail {$nfile}</h2>\n";

}
sub hide {
    my $ptag = shift;
    my $value = shift;
 #   print "hiding $ptag $value <br />";
    print $q->hidden($ptag, $value), "\n";

}
